=>Entendendo o Github:
-> Logando no git de maneira local na maquina:
1- Abrir o terminal;
2- git config --global user.email email cadastrado no git
3- git config --global user.name nome cadastrado no git
4- git config --list para verificar se deu certo
Criando repositorio no git:
1-Source control no vscode;
Untracked (U)-  nao rastreado
Index Added (A) - adicionado area de stage - separados para ser versionado 
2-Modified(M) Versão modificada no caso com novas alterações feitas no codigo quando salvar as alterações sai do M e vai para o A
3- Fazendo o primeiro commit:
Após fazer o commit o arquivo ainda fica no computador esperando o git push
4- Extensões que ajudam com o Github:
gitleans
gitgrpahs
Empurrando os arquivos para o git 
comando utilizado git push
com esse arquivo ele sobe para o git
Git pull 
serve para pegar a ultima versão do codigo mexido

Git em linha de comando 
1-git status mostra com o status do arquivo
2- git commit -m "aqui vai a mensagem " faz o commit

3- Subindo projeto do 0(zero)_
4- dividi o nome dos projetos por traços
5- git push --set-upstream origin master
6-

Conceito de branches -->
Toda vez que cria um repositorio é criada uma branches com o nome main ou master
uma segunda branches serve para mexer no codigo sem mexer na branch principal,
 da mesma forma que pode pegar as alterações da segunda branch e mandar para a branch master 

 Branch na prática -->
 a segunda branch é chamada de brach developer 
 onde podemos mexer no codigo sem atrapalhar a master

 Git merge -->
 Mandando as atualizações de uma brach para a outra
usa o codigo pull request 